apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.app.name }}
    {{- if .Values.additionalLabels }}
    {{- toYaml .Values.additionalLabels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  {{- with .Values.deployment.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.securityContext.pod }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name | default .Values.app.name }}
      {{- end }}
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          {{- with .Values.securityContext.container }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.app.port }}
              protocol: TCP
          {{- if .Values.healthcheck.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheck.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthcheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthcheck.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthcheck.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthcheck.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.healthcheck.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.healthcheck.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheck.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthcheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthcheck.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthcheck.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthcheck.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.healthcheck.readinessProbe.successThreshold }}
          {{- end }}
          {{- with .Values.deployment.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.env .Values.secretEnv }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- range .Values.secretEnv }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .secretKey }}
            {{- end }}
          {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}